=======================================================================
COMPILE AND INSTALL
=======================================================================

1. Configure the package for your system.

   Normally, you just `cd' to the package main directory and type
"cmake .".  The lde specific options are outlined below in the
CONFIGURE FLAGS section. Some of the newer (possibly untested) features
of lde may not be enabled unless you specify -DALPHA_CODE=ON
and/or -DBETA_CODE=ON.

2. Type `make' to compile the package.

3. Type `make install' (as root) or just run from the build folder.

   Installs man page and binary.  Installs lde binary in /sbin
   and changes its ownership to root.system with permission 500
   (only root can read and exec it).

=======================================================================
CONFIGURE FLAGS
=======================================================================
-DSEARCH_CURSES=OFF
        Disable curses support.

-DSEARCH_BISON=OFF
        Disable bison support.  Any dates entered must be in the locale's
        default format which is the same as the display format.  For
        the USA it is "Tue May 21 13:46:22 1991""

-DREAD_PART_TABLES=ON
        This will only read one group of disk tables into memory at a
        time.  For each group on the ext2fs, we read the inode map,
        block map, and inode table into memory and retain it until we
        are asked to access a block in another group.  If
        -DREAD_PART_TABLES=ON is not specified, we read in
        the tables for the entire partition (all groups).  Memory
        savings using partitial reads are probably not substantial,
        they should be on the order of kb, maybe 10's of kb.

-DNO_WRITE_INODE=ON
        Do not allow writes from inode mode.  To modify inodes, you
        may still edit a block containing the inodes in block mode.

-DPARANOID=ON
       Open device read only at all times.  If you are scared of doing
       damage to your disk, using -DPARANOID=ON will open the
       device read only at all times.  You will not be able to modify
       the disk using lde.  lde will also accept a run time flag 
       of --paranoid, but if compiled using -DPARANOID=ON there
       are no runtime flags that will allow writes to the device.

-DALPHA_CODE=ON
       Define this to activate alpha code.  Sometimes I include
       untested code in releases, but it will always be surrounded by
       `#ifdef ALPHA_CODE'.  The binary included in this release will
       not contain alpha code, to compile it in yourself, specify
       -DALPHA_CODE=ON when running cmake.

-DBETA_CODE=OFF
       Define this to deactivate beta code.  The binary included in
       this release will contain beta code (if it is labeled an Alpha
       or Beta release), to compile lde without any code marked
       `#ifdef BETA_CODE', specify -DBETA_CODE=OFF when
       running cmake.

-DERRORS_SAVED=NUMLINES
       Redefine the number of errors which are saved in the error
       history log.  If this option is omitted, 30 lines will be
       retained.

-DLDE_DEBUG=ON
       This is included as a developer convenience.  It will enable
       verbose error reporting when compiling and produce a debuggable
       executable file with ALPHA and BETA code predefined.  It
       doesn't test options, it just sets them. 

=======================================================================
TROUBLE SHOOTING
=======================================================================


llseek:
-------
   Some systems are missing the llseek prototype.  I'm using libc5 and
llseek is proto'ed in <unistd.h>.  This should all be taken care of by
configure.

typedef long long __loff_t;
extern __loff_t llseek __P ((int __fd, __loff_t __offset, int __whence));


Ncurses:
--------
   To compile lde for use in full screen mode, you must have the
ncurses package. I have tested lde with ncurses 4.2 and cannot
guarantee that it will work with any other version. If you don't have
ncurses, get it.  Check your favorite Linux archive site or
ftp://ftp.gnu.org/pub/gnu/ for the full ncurses distribution.

   The static binary I've included has built in support for linux,
xterm, and vt100 terminals.  This can be adjusted when compiling and
installing the ncurses package (see the FALLBACK section of ncurses
INSTALL file).  If your ncurses is not configured with fallback
entries and you want to keep lde somewhere for use in emergencies,
save a few terminfo files with this copy of lde, just in case it's
your /usr partition goes down.  You can then set the TERMINFO
environment variable to point to the directory containing these files.
